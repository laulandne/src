  // Don't edit this file, it is machine generated
  switch(topcode) {
      case 0x0:   dis_generic(loc,opcode);  break;  // illegal
      case 0x1:   dis_generic(loc,opcode);  break;  // illegal
      case 0x2:   dis_generic(loc,opcode);  break;  // illegal
      case 0x3:   dis_generic(loc,opcode);  break;  // illegal
      case 0x4:   dis_generic(loc,opcode);  break;  // illegal
      case 0x5:   dis_generic(loc,opcode);  break;  // illegal
      case 0x6:   dis_generic(loc,opcode);  break;  // illegal
      case 0x7:   dis_generic(loc,opcode);  break;  // illegal
      case 0x8:   dis_lda(loc,opcode);  break;  // lda
      case 0x9:   dis_ldah(loc,opcode);  break;  // ldah
      case 0x0A:   dis_generic(loc,opcode);  break;  // illegal
      case 0x0B:   dis_generic(loc,opcode);  break;  // illegal
      case 0x0C:   dis_generic(loc,opcode);  break;  // illegal
      case 0x0D:   dis_generic(loc,opcode);  break;  // illegal
      case 0x0E:   dis_generic(loc,opcode);  break;  // illegal
      case 0x0F:   dis_generic(loc,opcode);  break;  // illegal
      case 0x10:   dis_generic(loc,opcode);  break;  // illegal
      case 0x11:   dis_mov(loc,opcode);  break;  // mov
      case 0x12:   dis_generic(loc,opcode);  break;  // illegal
      case 0x13:   dis_generic(loc,opcode);  break;  // illegal
      case 0x14:   dis_generic(loc,opcode);  break;  // illegal
      case 0x15:   dis_generic(loc,opcode);  break;  // illegal
      case 0x16:   dis_generic(loc,opcode);  break;  // illegal
      case 0x17:   dis_generic(loc,opcode);  break;  // illegal
      case 0x18:   dis_generic(loc,opcode);  break;  // illegal
      case 0x19:   dis_generic(loc,opcode);  break;  // illegal
      case 0x1A:   dis_jsr(loc,opcode);  break;  // jsr
      case 0x1B:   dis_generic(loc,opcode);  break;  // illegal
      case 0x1C:   dis_generic(loc,opcode);  break;  // illegal
      case 0x1D:   dis_generic(loc,opcode);  break;  // illegal
      case 0x1E:   dis_generic(loc,opcode);  break;  // illegal
      case 0x1F:   dis_generic(loc,opcode);  break;  // illegal
      case 0x20:   dis_generic(loc,opcode);  break;  // illegal
      case 0x21:   dis_generic(loc,opcode);  break;  // illegal
      case 0x22:   dis_generic(loc,opcode);  break;  // illegal
      case 0x23:   dis_generic(loc,opcode);  break;  // illegal
      case 0x24:   dis_generic(loc,opcode);  break;  // illegal
      case 0x25:   dis_generic(loc,opcode);  break;  // illegal
      case 0x26:   dis_generic(loc,opcode);  break;  // illegal
      case 0x27:   dis_generic(loc,opcode);  break;  // illegal
      case 0x28:   dis_ldl(loc,opcode);  break;  // ldl
      case 0x29:   dis_ldq(loc,opcode);  break;  // ldq
      case 0x2A:   dis_generic(loc,opcode);  break;  // illegal
      case 0x2B:   dis_generic(loc,opcode);  break;  // illegal
      case 0x2C:   dis_stl(loc,opcode);  break;  // stl
      case 0x2D:   dis_stq(loc,opcode);  break;  // stq
      case 0x2E:   dis_generic(loc,opcode);  break;  // illegal
      case 0x2F:   dis_generic(loc,opcode);  break;  // illegal
      case 0x30:   dis_generic(loc,opcode);  break;  // illegal
      case 0x31:   dis_generic(loc,opcode);  break;  // illegal
      case 0x32:   dis_generic(loc,opcode);  break;  // illegal
      case 0x33:   dis_generic(loc,opcode);  break;  // illegal
      case 0x34:   dis_generic(loc,opcode);  break;  // illegal
      case 0x35:   dis_generic(loc,opcode);  break;  // illegal
      case 0x36:   dis_generic(loc,opcode);  break;  // illegal
      case 0x37:   dis_generic(loc,opcode);  break;  // illegal
      case 0x38:   dis_generic(loc,opcode);  break;  // illegal
      case 0x39:   dis_generic(loc,opcode);  break;  // illegal
      case 0x3A:   dis_generic(loc,opcode);  break;  // illegal
      case 0x3B:   dis_generic(loc,opcode);  break;  // illegal
      case 0x3C:   dis_generic(loc,opcode);  break;  // illegal
      case 0x3D:   dis_generic(loc,opcode);  break;  // illegal
      case 0x3E:   dis_generic(loc,opcode);  break;  // illegal
      case 0x3F:   dis_generic(loc,opcode);  break;  // illegal
      case 0x40:   dis_generic(loc,opcode);  break;  // illegal
      default:  dis_invalid("EAlpha_dis.h"); break;
  }
