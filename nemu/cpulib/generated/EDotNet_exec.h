  // Don't edit this file, it is machine generated
  switch(topcode) {
      case 0x0:   exec_nop(loc,opcode);  break;
      case 0x1:   exec_break(loc,opcode);  break;
      case 0x2:   exec_ldarg_0(loc,opcode);  break;
      case 0x3:   exec_ldarg_1(loc,opcode);  break;
      case 0x4:   exec_ldarg_2(loc,opcode);  break;
      case 0x5:   exec_ldarg_3(loc,opcode);  break;
      case 0x6:   exec_ldloc_0(loc,opcode);  break;
      case 0x7:   exec_ldloc_1(loc,opcode);  break;
      case 0x8:   exec_ldloc_2(loc,opcode);  break;
      case 0x9:   exec_ldloc_3(loc,opcode);  break;
      case 0x0A:   exec_stloc_0(loc,opcode);  break;
      case 0x0B:   exec_stloc_1(loc,opcode);  break;
      case 0x0C:   exec_stloc_2(loc,opcode);  break;
      case 0x0D:   exec_stloc_3(loc,opcode);  break;
      case 0x0E:   exec_ldarg_s(loc,opcode);  break;
      case 0x0F:   exec_ldarga_s(loc,opcode);  break;
      case 0x10:   exec_starg_s(loc,opcode);  break;
      case 0x11:   exec_ldloc_s(loc,opcode);  break;
      case 0x12:   exec_ldloca_s(loc,opcode);  break;
      case 0x13:   exec_stloc_s(loc,opcode);  break;
      case 0x14:   exec_ldnull(loc,opcode);  break;
      case 0x15:   exec_ldc_i4_m1(loc,opcode);  break;
      case 0x16:   exec_ldc_i4_0(loc,opcode);  break;
      case 0x17:   exec_ldc_i4_1(loc,opcode);  break;
      case 0x18:   exec_ldc_i4_2(loc,opcode);  break;
      case 0x19:   exec_ldc_i4_3(loc,opcode);  break;
      case 0x1A:   exec_ldc_i4_4(loc,opcode);  break;
      case 0x1B:   exec_ldc_i4_5(loc,opcode);  break;
      case 0x1C:   exec_ldc_i4_6(loc,opcode);  break;
      case 0x1D:   exec_ldc_i4_7(loc,opcode);  break;
      case 0x1E:   exec_ldc_i4_8(loc,opcode);  break;
      case 0x1F:   exec_ldc_i4_s(loc,opcode);  break;
      case 0x20:   exec_ldc_i4(loc,opcode);  break;
      case 0x21:   exec_ldc_i8(loc,opcode);  break;
      case 0x22:   exec_ldc_r4(loc,opcode);  break;
      case 0x23:   exec_ldc_r8(loc,opcode);  break;
      case 0x24:   exec_illegal(loc,opcode);  break;
      case 0x25:   exec_dup(loc,opcode);  break;
      case 0x26:   exec_pop(loc,opcode);  break;
      case 0x27:   exec_jmp(loc,opcode);  break;
      case 0x28:   exec_call(loc,opcode);  break;
      case 0x29:   exec_calli(loc,opcode);  break;
      case 0x2A:   exec_ret(loc,opcode);  break;
      case 0x2B:   exec_br_s(loc,opcode);  break;
      case 0x2C:   exec_brfalse_s(loc,opcode);  break;
      case 0x2D:   exec_brtrue_s(loc,opcode);  break;
      case 0x2E:   exec_beq_s(loc,opcode);  break;
      case 0x2F:   exec_bge_s(loc,opcode);  break;
      case 0x30:   exec_bgt_s(loc,opcode);  break;
      case 0x31:   exec_ble_s(loc,opcode);  break;
      case 0x32:   exec_blt_s(loc,opcode);  break;
      case 0x33:   exec_bne_un_s(loc,opcode);  break;
      case 0x34:   exec_bge_un_s(loc,opcode);  break;
      case 0x35:   exec_bgt_un_s(loc,opcode);  break;
      case 0x36:   exec_ble_un_s(loc,opcode);  break;
      case 0x37:   exec_blt_un_s(loc,opcode);  break;
      case 0x38:   exec_br(loc,opcode);  break;
      case 0x39:   exec_brfalse(loc,opcode);  break;
      case 0x3A:   exec_brtrue(loc,opcode);  break;
      case 0x3B:   exec_beq(loc,opcode);  break;
      case 0x3C:   exec_bge(loc,opcode);  break;
      case 0x3D:   exec_bgt(loc,opcode);  break;
      case 0x3E:   exec_ble(loc,opcode);  break;
      case 0x3F:   exec_blt(loc,opcode);  break;
      case 0x40:   exec_bne_un(loc,opcode);  break;
      case 0x41:   exec_bge_un(loc,opcode);  break;
      case 0x42:   exec_bgt_un(loc,opcode);  break;
      case 0x43:   exec_ble_un(loc,opcode);  break;
      case 0x44:   exec_blt_un(loc,opcode);  break;
      case 0x45:   exec_switch(loc,opcode);  break;
      case 0x46:   exec_ldind_i1(loc,opcode);  break;
      case 0x47:   exec_ldind_u1(loc,opcode);  break;
      case 0x48:   exec_ldind_i2(loc,opcode);  break;
      case 0x49:   exec_ldind_u2(loc,opcode);  break;
      case 0x4A:   exec_ldind_i4(loc,opcode);  break;
      case 0x4B:   exec_ldind_u4(loc,opcode);  break;
      case 0x4C:   exec_ldind_i8(loc,opcode);  break;
      case 0x4D:   exec_ldind_i(loc,opcode);  break;
      case 0x4E:   exec_ldind_r4(loc,opcode);  break;
      case 0x4F:   exec_ldind_r8(loc,opcode);  break;
      case 0x50:   exec_ldind_ref(loc,opcode);  break;
      case 0x51:   exec_stind_ref(loc,opcode);  break;
      case 0x52:   exec_stind_i1(loc,opcode);  break;
      case 0x53:   exec_stind_i2(loc,opcode);  break;
      case 0x54:   exec_stind_i4(loc,opcode);  break;
      case 0x55:   exec_stind_i8(loc,opcode);  break;
      case 0x56:   exec_stind_r4(loc,opcode);  break;
      case 0x57:   exec_stind_r8(loc,opcode);  break;
      case 0x58:   exec_add(loc,opcode);  break;
      case 0x59:   exec_sub(loc,opcode);  break;
      case 0x5A:   exec_mul(loc,opcode);  break;
      case 0x5B:   exec_div(loc,opcode);  break;
      case 0x5C:   exec_div_un(loc,opcode);  break;
      case 0x5D:   exec_rem(loc,opcode);  break;
      case 0x5E:   exec_rem_un(loc,opcode);  break;
      case 0x5F:   exec_and(loc,opcode);  break;
      case 0x60:   exec_or(loc,opcode);  break;
      case 0x61:   exec_xor(loc,opcode);  break;
      case 0x62:   exec_shl(loc,opcode);  break;
      case 0x63:   exec_shr(loc,opcode);  break;
      case 0x64:   exec_shr_un(loc,opcode);  break;
      case 0x65:   exec_neg(loc,opcode);  break;
      case 0x66:   exec_not(loc,opcode);  break;
      case 0x67:   exec_conv_i1(loc,opcode);  break;
      case 0x68:   exec_conv_i2(loc,opcode);  break;
      case 0x69:   exec_conv_i4(loc,opcode);  break;
      case 0x6A:   exec_conv_i8(loc,opcode);  break;
      case 0x6B:   exec_conv_r4(loc,opcode);  break;
      case 0x6C:   exec_conv_r8(loc,opcode);  break;
      case 0x6D:   exec_conv_u4(loc,opcode);  break;
      case 0x6E:   exec_conv_u8(loc,opcode);  break;
      case 0x6F:   exec_callvirt(loc,opcode);  break;
      case 0x70:   exec_cpobj(loc,opcode);  break;
      case 0x71:   exec_ldobj(loc,opcode);  break;
      case 0x72:   exec_ldstr(loc,opcode);  break;
      case 0x73:   exec_newobj(loc,opcode);  break;
      case 0x74:   exec_castclass(loc,opcode);  break;
      case 0x75:   exec_isinst(loc,opcode);  break;
      case 0x76:   exec_conv_r_un(loc,opcode);  break;
      case 0x77:   exec_illegal(loc,opcode);  break;
      case 0x78:   exec_illegal(loc,opcode);  break;
      case 0x79:   exec_unbox(loc,opcode);  break;
      case 0x7A:   exec_throw(loc,opcode);  break;
      case 0x7B:   exec_ldfld(loc,opcode);  break;
      case 0x7C:   exec_ldflda(loc,opcode);  break;
      case 0x7D:   exec_stfld(loc,opcode);  break;
      case 0x7E:   exec_ldsfld(loc,opcode);  break;
      case 0x7F:   exec_ldsflda(loc,opcode);  break;
      case 0x80:   exec_stsfld(loc,opcode);  break;
      case 0x81:   exec_stobj(loc,opcode);  break;
      case 0x82:   exec_conv_ovf_i1_un(loc,opcode);  break;
      case 0x83:   exec_conv_ovf_i2_un(loc,opcode);  break;
      case 0x84:   exec_conv_ovf_i4_un(loc,opcode);  break;
      case 0x85:   exec_conv_ovf_i8_un(loc,opcode);  break;
      case 0x86:   exec_conv_ovf_u1_un(loc,opcode);  break;
      case 0x87:   exec_conv_ovf_u2_un(loc,opcode);  break;
      case 0x88:   exec_conv_ovf_u4_un(loc,opcode);  break;
      case 0x89:   exec_conv_ovf_u8_un(loc,opcode);  break;
      case 0x8A:   exec_conv_ovf_i_un(loc,opcode);  break;
      case 0x8B:   exec_conv_ovf_u_un(loc,opcode);  break;
      case 0x8C:   exec_box(loc,opcode);  break;
      case 0x8D:   exec_newarr(loc,opcode);  break;
      case 0x8E:   exec_ldlen(loc,opcode);  break;
      case 0x8F:   exec_ldelema(loc,opcode);  break;
      case 0x90:   exec_ldelem_i1(loc,opcode);  break;
      case 0x91:   exec_ldelem_u1(loc,opcode);  break;
      case 0x92:   exec_ldelem_i2(loc,opcode);  break;
      case 0x93:   exec_ldelem_u2(loc,opcode);  break;
      case 0x94:   exec_ldelem_i4(loc,opcode);  break;
      case 0x95:   exec_ldelem_u4(loc,opcode);  break;
      case 0x96:   exec_ldelem_i8(loc,opcode);  break;
      case 0x97:   exec_ldelem_i(loc,opcode);  break;
      case 0x98:   exec_ldelem_r4(loc,opcode);  break;
      case 0x99:   exec_ldelem_r8(loc,opcode);  break;
      case 0x9A:   exec_ldelem_ref(loc,opcode);  break;
      case 0x9B:   exec_stelem_i(loc,opcode);  break;
      case 0x9C:   exec_stelem_i1(loc,opcode);  break;
      case 0x9D:   exec_stelem_i2(loc,opcode);  break;
      case 0x9E:   exec_stelem_i4(loc,opcode);  break;
      case 0x9F:   exec_stelem_i8(loc,opcode);  break;
      case 0xA0:   exec_stelem_r4(loc,opcode);  break;
      case 0xA1:   exec_stelem_r8(loc,opcode);  break;
      case 0xA2:   exec_stelem_ref(loc,opcode);  break;
      case 0xA3:   exec_illegal(loc,opcode);  break;
      case 0xA4:   exec_illegal(loc,opcode);  break;
      case 0xA5:   exec_illegal(loc,opcode);  break;
      case 0xA6:   exec_illegal(loc,opcode);  break;
      case 0xA7:   exec_illegal(loc,opcode);  break;
      case 0xA8:   exec_illegal(loc,opcode);  break;
      case 0xA9:   exec_illegal(loc,opcode);  break;
      case 0xAA:   exec_illegal(loc,opcode);  break;
      case 0xAB:   exec_illegal(loc,opcode);  break;
      case 0xAC:   exec_illegal(loc,opcode);  break;
      case 0xAD:   exec_illegal(loc,opcode);  break;
      case 0xAE:   exec_illegal(loc,opcode);  break;
      case 0xAF:   exec_illegal(loc,opcode);  break;
      case 0xB0:   exec_illegal(loc,opcode);  break;
      case 0xB1:   exec_illegal(loc,opcode);  break;
      case 0xB2:   exec_illegal(loc,opcode);  break;
      case 0xB3:   exec_conv_ovf_i1(loc,opcode);  break;
      case 0xB4:   exec_conv_ovf_u1(loc,opcode);  break;
      case 0xB5:   exec_conv_ovf_i2(loc,opcode);  break;
      case 0xB6:   exec_conv_ovf_u2(loc,opcode);  break;
      case 0xB7:   exec_conv_ovf_i4(loc,opcode);  break;
      case 0xB8:   exec_conv_ovf_u4(loc,opcode);  break;
      case 0xB9:   exec_conv_ovf_i8(loc,opcode);  break;
      case 0xBA:   exec_conv_ovf_u8(loc,opcode);  break;
      case 0xBB:   exec_illegal(loc,opcode);  break;
      case 0xBC:   exec_illegal(loc,opcode);  break;
      case 0xBD:   exec_illegal(loc,opcode);  break;
      case 0xBE:   exec_illegal(loc,opcode);  break;
      case 0xBF:   exec_illegal(loc,opcode);  break;
      case 0xC0:   exec_illegal(loc,opcode);  break;
      case 0xC1:   exec_illegal(loc,opcode);  break;
      case 0xC2:   exec_refanyval(loc,opcode);  break;
      case 0xC3:   exec_ckfinite(loc,opcode);  break;
      case 0xC4:   exec_illegal(loc,opcode);  break;
      case 0xC5:   exec_illegal(loc,opcode);  break;
      case 0xC6:   exec_mkrefany(loc,opcode);  break;
      case 0xC7:   exec_illegal(loc,opcode);  break;
      case 0xC8:   exec_illegal(loc,opcode);  break;
      case 0xC9:   exec_illegal(loc,opcode);  break;
      case 0xCA:   exec_illegal(loc,opcode);  break;
      case 0xCB:   exec_illegal(loc,opcode);  break;
      case 0xCC:   exec_illegal(loc,opcode);  break;
      case 0xCD:   exec_illegal(loc,opcode);  break;
      case 0xCE:   exec_illegal(loc,opcode);  break;
      case 0xCF:   exec_illegal(loc,opcode);  break;
      case 0xD0:   exec_ldtoken(loc,opcode);  break;
      case 0xD1:   exec_conv_u2(loc,opcode);  break;
      case 0xD2:   exec_conv_u1(loc,opcode);  break;
      case 0xD3:   exec_conv_i(loc,opcode);  break;
      case 0xD4:   exec_conv_ovf_i(loc,opcode);  break;
      case 0xD5:   exec_conv_ovf_u(loc,opcode);  break;
      case 0xD6:   exec_add_ovf(loc,opcode);  break;
      case 0xD7:   exec_add_ovf_un(loc,opcode);  break;
      case 0xD8:   exec_mul_ovf(loc,opcode);  break;
      case 0xD9:   exec_mul_ovf_un(loc,opcode);  break;
      case 0xDA:   exec_sub_ovf(loc,opcode);  break;
      case 0xDB:   exec_sub_ovf_un(loc,opcode);  break;
      case 0xDC:   exec_endfinally(loc,opcode);  break;
      case 0xDD:   exec_leave(loc,opcode);  break;
      case 0xDE:   exec_leave_s(loc,opcode);  break;
      case 0xDF:   exec_stind_i(loc,opcode);  break;
      case 0xE0:   exec_conv_u(loc,opcode);  break;
      case 0xE1:   exec_illegal(loc,opcode);  break;
      case 0xE2:   exec_illegal(loc,opcode);  break;
      case 0xE3:   exec_illegal(loc,opcode);  break;
      case 0xE4:   exec_illegal(loc,opcode);  break;
      case 0xE5:   exec_illegal(loc,opcode);  break;
      case 0xE6:   exec_illegal(loc,opcode);  break;
      case 0xE7:   exec_illegal(loc,opcode);  break;
      case 0xE8:   exec_illegal(loc,opcode);  break;
      case 0xE9:   exec_illegal(loc,opcode);  break;
      case 0xEA:   exec_illegal(loc,opcode);  break;
      case 0xEB:   exec_illegal(loc,opcode);  break;
      case 0xEC:   exec_illegal(loc,opcode);  break;
      case 0xED:   exec_illegal(loc,opcode);  break;
      case 0xEE:   exec_illegal(loc,opcode);  break;
      case 0xEF:   exec_illegal(loc,opcode);  break;
      case 0xF0:   exec_illegal(loc,opcode);  break;
      case 0xF1:   exec_illegal(loc,opcode);  break;
      case 0xF2:   exec_illegal(loc,opcode);  break;
      case 0xF3:   exec_illegal(loc,opcode);  break;
      case 0xF4:   exec_illegal(loc,opcode);  break;
      case 0xF5:   exec_illegal(loc,opcode);  break;
      case 0xF6:   exec_illegal(loc,opcode);  break;
      case 0xF7:   exec_illegal(loc,opcode);  break;
      case 0xF8:   exec_illegal(loc,opcode);  break;
      case 0xF9:   exec_illegal(loc,opcode);  break;
      case 0xFA:   exec_illegal(loc,opcode);  break;
      case 0xFB:   exec_illegal(loc,opcode);  break;
      case 0xFC:   exec_illegal(loc,opcode);  break;
      case 0xFD:   exec_illegal(loc,opcode);  break;
      case 0xFE:   exec_special(loc,opcode);  break;
      case 0xFF:   exec_illegal(loc,opcode);  break;
      default:  exec_invalid("EDotNet_exec.h"); break;
  }
