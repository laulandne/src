  // Don't edit this file, it is machine generated
  switch(topcode) {
      case 0x0:   exec_nop(loc,opcode);  break;
      case 0x1:   exec_push(loc,opcode);  break;
      case 0x2:   exec_popv(loc,opcode);  break;
      case 0x3:   exec_enterwith(loc,opcode);  break;
      case 0x4:   exec_leavewith(loc,opcode);  break;
      case 0x5:   exec_return(loc,opcode);  break;
      case 0x6:   exec_goto(loc,opcode);  break;
      case 0x7:   exec_ifeq(loc,opcode);  break;
      case 0x8:   exec_ifne(loc,opcode);  break;
      case 0x9:   exec_js_arguments_str(loc,opcode);  break;
      case 0x0A:   exec_forarg(loc,opcode);  break;
      case 0x0B:   exec_forvar(loc,opcode);  break;
      case 0x0C:   exec_dup(loc,opcode);  break;
      case 0x0D:   exec_dup2(loc,opcode);  break;
      case 0x0E:   exec_setconst(loc,opcode);  break;
      case 0x0F:   exec_bitor(loc,opcode);  break;
      case 0x10:   exec_bitxor(loc,opcode);  break;
      case 0x11:   exec_bitand(loc,opcode);  break;
      case 0x12:   exec_eq(loc,opcode);  break;
      case 0x13:   exec_ne(loc,opcode);  break;
      case 0x14:   exec_lt(loc,opcode);  break;
      case 0x15:   exec_le(loc,opcode);  break;
      case 0x16:   exec_gt(loc,opcode);  break;
      case 0x17:   exec_ge(loc,opcode);  break;
      case 0x18:   exec_lsh(loc,opcode);  break;
      case 0x19:   exec_rsh(loc,opcode);  break;
      case 0x1A:   exec_ursh(loc,opcode);  break;
      case 0x1B:   exec_add(loc,opcode);  break;
      case 0x1C:   exec_sub(loc,opcode);  break;
      case 0x1D:   exec_mul(loc,opcode);  break;
      case 0x1E:   exec_div(loc,opcode);  break;
      case 0x1F:   exec_mod(loc,opcode);  break;
      case 0x20:   exec_not(loc,opcode);  break;
      case 0x21:   exec_bitnot(loc,opcode);  break;
      case 0x22:   exec_neg(loc,opcode);  break;
      case 0x23:   exec_js_new_str(loc,opcode);  break;
      case 0x24:   exec_delname(loc,opcode);  break;
      case 0x25:   exec_delprop(loc,opcode);  break;
      case 0x26:   exec_delelem(loc,opcode);  break;
      case 0x27:   exec_js_typeof_str(loc,opcode);  break;
      case 0x28:   exec_js_void_str(loc,opcode);  break;
      case 0x29:   exec_incname(loc,opcode);  break;
      case 0x2A:   exec_incprop(loc,opcode);  break;
      case 0x2B:   exec_incelem(loc,opcode);  break;
      case 0x2C:   exec_decname(loc,opcode);  break;
      case 0x2D:   exec_decprop(loc,opcode);  break;
      case 0x2E:   exec_decelem(loc,opcode);  break;
      case 0x2F:   exec_nameinc(loc,opcode);  break;
      case 0x30:   exec_propinc(loc,opcode);  break;
      case 0x31:   exec_eleminc(loc,opcode);  break;
      case 0x32:   exec_namedec(loc,opcode);  break;
      case 0x33:   exec_propdec(loc,opcode);  break;
      case 0x34:   exec_elemdec(loc,opcode);  break;
      case 0x35:   exec_getprop(loc,opcode);  break;
      case 0x36:   exec_setprop(loc,opcode);  break;
      case 0x37:   exec_getelem(loc,opcode);  break;
      case 0x38:   exec_setelem(loc,opcode);  break;
      case 0x39:   exec_pushobj(loc,opcode);  break;
      case 0x3A:   exec_call(loc,opcode);  break;
      case 0x3B:   exec_name(loc,opcode);  break;
      case 0x3C:   exec_number(loc,opcode);  break;
      case 0x3D:   exec_string(loc,opcode);  break;
      case 0x3E:   exec_zero(loc,opcode);  break;
      case 0x3F:   exec_one(loc,opcode);  break;
      case 0x40:   exec_js_null_str(loc,opcode);  break;
      case 0x41:   exec_js_this_str(loc,opcode);  break;
      case 0x42:   exec_js_false_str(loc,opcode);  break;
      case 0x43:   exec_js_true_str(loc,opcode);  break;
      case 0x44:   exec_or(loc,opcode);  break;
      case 0x45:   exec_and(loc,opcode);  break;
      case 0x46:   exec_tableswitch(loc,opcode);  break;
      case 0x47:   exec_lookupswitch(loc,opcode);  break;
      case 0x48:   exec_eq(loc,opcode);  break;
      case 0x49:   exec_ne(loc,opcode);  break;
      case 0x4A:   exec_closure(loc,opcode);  break;
      case 0x4B:   exec_exportall(loc,opcode);  break;
      case 0x4C:   exec_exportname(loc,opcode);  break;
      case 0x4D:   exec_importall(loc,opcode);  break;
      case 0x4E:   exec_importprop(loc,opcode);  break;
      case 0x4F:   exec_importelem(loc,opcode);  break;
      case 0x50:   exec_object(loc,opcode);  break;
      case 0x51:   exec_pop(loc,opcode);  break;
      case 0x52:   exec_pos(loc,opcode);  break;
      case 0x53:   exec_trap(loc,opcode);  break;
      case 0x54:   exec_getarg(loc,opcode);  break;
      case 0x55:   exec_setarg(loc,opcode);  break;
      case 0x56:   exec_getvar(loc,opcode);  break;
      case 0x57:   exec_setvar(loc,opcode);  break;
      case 0x58:   exec_uint16(loc,opcode);  break;
      case 0x59:   exec_newinit(loc,opcode);  break;
      case 0x5A:   exec_endinit(loc,opcode);  break;
      case 0x5B:   exec_initprop(loc,opcode);  break;
      case 0x5C:   exec_initelem(loc,opcode);  break;
      case 0x5D:   exec_defsharp(loc,opcode);  break;
      case 0x5E:   exec_usesharp(loc,opcode);  break;
      case 0x5F:   exec_incarg(loc,opcode);  break;
      case 0x60:   exec_incvar(loc,opcode);  break;
      case 0x61:   exec_decarg(loc,opcode);  break;
      case 0x62:   exec_decvar(loc,opcode);  break;
      case 0x63:   exec_arginc(loc,opcode);  break;
      case 0x64:   exec_varinc(loc,opcode);  break;
      case 0x65:   exec_argdec(loc,opcode);  break;
      case 0x66:   exec_vardec(loc,opcode);  break;
      case 0x67:   exec_toobject(loc,opcode);  break;
      case 0x68:   exec_forname(loc,opcode);  break;
      case 0x69:   exec_forprop(loc,opcode);  break;
      case 0x6A:   exec_forelem(loc,opcode);  break;
      case 0x6B:   exec_pop2(loc,opcode);  break;
      case 0x6C:   exec_bindname(loc,opcode);  break;
      case 0x6D:   exec_setname(loc,opcode);  break;
      case 0x6E:   exec_throw(loc,opcode);  break;
      case 0x6F:   exec_js_in_str(loc,opcode);  break;
      case 0x70:   exec_js_instanceof_str(loc,opcode);  break;
      case 0x71:   exec_debugger(loc,opcode);  break;
      case 0x72:   exec_gosub(loc,opcode);  break;
      case 0x73:   exec_retsub(loc,opcode);  break;
      case 0x74:   exec_exception(loc,opcode);  break;
      case 0x75:   exec_setsp(loc,opcode);  break;
      case 0x76:   exec_condswitch(loc,opcode);  break;
      case 0x77:   exec_case(loc,opcode);  break;
      case 0x78:   exec_default(loc,opcode);  break;
      case 0x79:   exec_eval(loc,opcode);  break;
      case 0x7A:   exec_enumelem(loc,opcode);  break;
      case 0x7B:   exec_js_getter_str(loc,opcode);  break;
      case 0x7C:   exec_js_setter_str(loc,opcode);  break;
      case 0x7D:   exec_deffun(loc,opcode);  break;
      case 0x7E:   exec_defconst(loc,opcode);  break;
      case 0x7F:   exec_defvar(loc,opcode);  break;
      case 0x80:   exec_anonfunobj(loc,opcode);  break;
      case 0x81:   exec_namedfunobj(loc,opcode);  break;
      case 0x82:   exec_initcatchvar(loc,opcode);  break;
      case 0x83:   exec_group(loc,opcode);  break;
      case 0x84:   exec_setcall(loc,opcode);  break;
      case 0x85:   exec_try(loc,opcode);  break;
      case 0x86:   exec_finally(loc,opcode);  break;
      case 0x87:   exec_swap(loc,opcode);  break;
      case 0x88:   exec_argsub(loc,opcode);  break;
      case 0x89:   exec_argcnt(loc,opcode);  break;
      case 0x8A:   exec_deflocalfun(loc,opcode);  break;
      case 0x8B:   exec_gotox(loc,opcode);  break;
      case 0x8C:   exec_ifeqx(loc,opcode);  break;
      case 0x8D:   exec_ifnex(loc,opcode);  break;
      case 0x8E:   exec_orx(loc,opcode);  break;
      case 0x8F:   exec_andx(loc,opcode);  break;
      case 0x90:   exec_gosubx(loc,opcode);  break;
      case 0x91:   exec_casex(loc,opcode);  break;
      case 0x92:   exec_defaultx(loc,opcode);  break;
      case 0x93:   exec_tableswitchx(loc,opcode);  break;
      case 0x94:   exec_lookupswitchx(loc,opcode);  break;
      case 0x95:   exec_backpatch(loc,opcode);  break;
      case 0x96:   exec_backpatch_pop(loc,opcode);  break;
      case 0x97:   exec_backpatch_push(loc,opcode);  break;
      case 0x98:   exec_setrval(loc,opcode);  break;
      case 0x99:   exec_retrval(loc,opcode);  break;
      case 0x9A:   exec_getgvar(loc,opcode);  break;
      case 0x9B:   exec_setgvar(loc,opcode);  break;
      case 0x9C:   exec_incgvar(loc,opcode);  break;
      case 0x9D:   exec_decgvar(loc,opcode);  break;
      case 0x9E:   exec_gvarinc(loc,opcode);  break;
      case 0x9F:   exec_gvardec(loc,opcode);  break;
      case 0xA0:   exec_regexp(loc,opcode);  break;
      case 0xA1:   exec_defxmlns(loc,opcode);  break;
      case 0xA2:   exec_anyname(loc,opcode);  break;
      case 0xA3:   exec_qnamepart(loc,opcode);  break;
      case 0xA4:   exec_qnameconst(loc,opcode);  break;
      case 0xA5:   exec_qname(loc,opcode);  break;
      case 0xA6:   exec_toattrname(loc,opcode);  break;
      case 0xA7:   exec_toattrval(loc,opcode);  break;
      case 0xA8:   exec_addattrname(loc,opcode);  break;
      case 0xA9:   exec_addattrval(loc,opcode);  break;
      case 0xAA:   exec_bindxmlname(loc,opcode);  break;
      case 0xAB:   exec_setxmlname(loc,opcode);  break;
      case 0xAC:   exec_xmlname(loc,opcode);  break;
      case 0xAD:   exec_descendants(loc,opcode);  break;
      case 0xAE:   exec_filter(loc,opcode);  break;
      case 0xAF:   exec_endfilter(loc,opcode);  break;
      case 0xB0:   exec_toxml(loc,opcode);  break;
      case 0xB1:   exec_toxmllist(loc,opcode);  break;
      case 0xB2:   exec_xmltagexpr(loc,opcode);  break;
      case 0xB3:   exec_xmleltexpr(loc,opcode);  break;
      case 0xB4:   exec_xmlobject(loc,opcode);  break;
      case 0xB5:   exec_xmlcdata(loc,opcode);  break;
      case 0xB6:   exec_xmlcomment(loc,opcode);  break;
      case 0xB7:   exec_xmlpi(loc,opcode);  break;
      case 0xB8:   exec_getmethod(loc,opcode);  break;
      case 0xB9:   exec_getfunns(loc,opcode);  break;
      case 0xBA:   exec_foreach(loc,opcode);  break;
      case 0xBB:   exec_deldesc(loc,opcode);  break;
      case 0xBC:   exec_uint24(loc,opcode);  break;
      case 0xBD:   exec_literal(loc,opcode);  break;
      case 0xBE:   exec_findname(loc,opcode);  break;
      case 0xBF:   exec_litopx(loc,opcode);  break;
      case 0xC0:   exec_startxml(loc,opcode);  break;
      case 0xC1:   exec_startxmlexpr(loc,opcode);  break;
      case 0xC2:   exec_setmethod(loc,opcode);  break;
      case 0xC3:   exec_stop(loc,opcode);  break;
      case 0xC4:   exec_getxprop(loc,opcode);  break;
      case 0xC5:   exec_getxelem(loc,opcode);  break;
      case 0xC6:   exec_js_typeof_str(loc,opcode);  break;
      case 0xC7:   exec_illegal(loc,opcode);  break;
      case 0xC8:   exec_illegal(loc,opcode);  break;
      case 0xC9:   exec_illegal(loc,opcode);  break;
      case 0xCA:   exec_illegal(loc,opcode);  break;
      case 0xCB:   exec_illegal(loc,opcode);  break;
      case 0xCC:   exec_illegal(loc,opcode);  break;
      case 0xCD:   exec_illegal(loc,opcode);  break;
      case 0xCE:   exec_illegal(loc,opcode);  break;
      case 0xCF:   exec_illegal(loc,opcode);  break;
      case 0xD0:   exec_illegal(loc,opcode);  break;
      case 0xD1:   exec_illegal(loc,opcode);  break;
      case 0xD2:   exec_illegal(loc,opcode);  break;
      case 0xD3:   exec_illegal(loc,opcode);  break;
      case 0xD4:   exec_illegal(loc,opcode);  break;
      case 0xD5:   exec_illegal(loc,opcode);  break;
      case 0xD6:   exec_illegal(loc,opcode);  break;
      case 0xD7:   exec_illegal(loc,opcode);  break;
      case 0xD8:   exec_illegal(loc,opcode);  break;
      case 0xD9:   exec_illegal(loc,opcode);  break;
      case 0xDA:   exec_illegal(loc,opcode);  break;
      case 0xDB:   exec_illegal(loc,opcode);  break;
      case 0xDC:   exec_illegal(loc,opcode);  break;
      case 0xDD:   exec_illegal(loc,opcode);  break;
      case 0xDE:   exec_illegal(loc,opcode);  break;
      case 0xDF:   exec_illegal(loc,opcode);  break;
      case 0xE0:   exec_illegal(loc,opcode);  break;
      case 0xE1:   exec_illegal(loc,opcode);  break;
      case 0xE2:   exec_illegal(loc,opcode);  break;
      case 0xE3:   exec_illegal(loc,opcode);  break;
      case 0xE4:   exec_illegal(loc,opcode);  break;
      case 0xE5:   exec_illegal(loc,opcode);  break;
      case 0xE6:   exec_illegal(loc,opcode);  break;
      case 0xE7:   exec_illegal(loc,opcode);  break;
      case 0xE8:   exec_illegal(loc,opcode);  break;
      case 0xE9:   exec_illegal(loc,opcode);  break;
      case 0xEA:   exec_illegal(loc,opcode);  break;
      case 0xEB:   exec_illegal(loc,opcode);  break;
      case 0xEC:   exec_illegal(loc,opcode);  break;
      case 0xED:   exec_illegal(loc,opcode);  break;
      case 0xEE:   exec_illegal(loc,opcode);  break;
      case 0xEF:   exec_illegal(loc,opcode);  break;
      case 0xF0:   exec_illegal(loc,opcode);  break;
      case 0xF1:   exec_illegal(loc,opcode);  break;
      case 0xF2:   exec_illegal(loc,opcode);  break;
      case 0xF3:   exec_illegal(loc,opcode);  break;
      case 0xF4:   exec_illegal(loc,opcode);  break;
      case 0xF5:   exec_illegal(loc,opcode);  break;
      case 0xF6:   exec_illegal(loc,opcode);  break;
      case 0xF7:   exec_illegal(loc,opcode);  break;
      case 0xF8:   exec_illegal(loc,opcode);  break;
      case 0xF9:   exec_illegal(loc,opcode);  break;
      case 0xFA:   exec_illegal(loc,opcode);  break;
      case 0xFB:   exec_illegal(loc,opcode);  break;
      case 0xFC:   exec_illegal(loc,opcode);  break;
      case 0xFD:   exec_illegal(loc,opcode);  break;
      case 0xFE:   exec_illegal(loc,opcode);  break;
      case 0xFF:   exec_illegal(loc,opcode);  break;
      default:  exec_invalid("EJavascript_exec.h"); break;
  }
