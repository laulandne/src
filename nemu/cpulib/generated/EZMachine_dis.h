  // Don't edit this file, it is machine generated
  switch(topcode) {
      case 0x0:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x1:   dis_je(loc,opcode);  break;  // je
      case 0x2:   dis_jl(loc,opcode);  break;  // jl
      case 0x3:   dis_jg(loc,opcode);  break;  // jg
      case 0x4:   dis_dec_chk(loc,opcode);  break;  // dec_chk
      case 0x5:   dis_inc_chk(loc,opcode);  break;  // inc_chk
      case 0x6:   dis_jin(loc,opcode);  break;  // jin
      case 0x7:   dis_test(loc,opcode);  break;  // test
      case 0x8:   dis_or(loc,opcode);  break;  // or
      case 0x9:   dis_and(loc,opcode);  break;  // and
      case 0x0A:   dis_test_attr(loc,opcode);  break;  // test_attr
      case 0x0B:   dis_set_attr(loc,opcode);  break;  // set_attr
      case 0x0C:   dis_clear_attr(loc,opcode);  break;  // clear_attr
      case 0x0D:   dis_store(loc,opcode);  break;  // store
      case 0x0E:   dis_insert_obj(loc,opcode);  break;  // insert_obj
      case 0x0F:   dis_loadw(loc,opcode);  break;  // loadw
      case 0x10:   dis_loadb(loc,opcode);  break;  // loadb
      case 0x11:   dis_get_prop(loc,opcode);  break;  // get_prop
      case 0x12:   dis_get_prop_addr(loc,opcode);  break;  // get_prop_addr
      case 0x13:   dis_get_next_prop(loc,opcode);  break;  // get_next_prop
      case 0x14:   dis_add(loc,opcode);  break;  // add
      case 0x15:   dis_sub(loc,opcode);  break;  // sub
      case 0x16:   dis_mul(loc,opcode);  break;  // mul
      case 0x17:   dis_div(loc,opcode);  break;  // div
      case 0x18:   dis_mod(loc,opcode);  break;  // mod
      case 0x19:   dis_call_2s(loc,opcode);  break;  // call_2s
      case 0x1A:   dis_call_2n(loc,opcode);  break;  // call_2n
      case 0x1B:   dis_set_colour(loc,opcode);  break;  // set_colour
      case 0x1C:   dis_throw(loc,opcode);  break;  // throw
      case 0x1D:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x1E:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x1F:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x20:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x21:   dis_je(loc,opcode);  break;  // je
      case 0x22:   dis_jl(loc,opcode);  break;  // jl
      case 0x23:   dis_jg(loc,opcode);  break;  // jg
      case 0x24:   dis_dec_chk(loc,opcode);  break;  // dec_chk
      case 0x25:   dis_inc_chk(loc,opcode);  break;  // inc_chk
      case 0x26:   dis_jin(loc,opcode);  break;  // jin
      case 0x27:   dis_test(loc,opcode);  break;  // test
      case 0x28:   dis_or(loc,opcode);  break;  // or
      case 0x29:   dis_and(loc,opcode);  break;  // and
      case 0x2A:   dis_test_attr(loc,opcode);  break;  // test_attr
      case 0x2B:   dis_set_attr(loc,opcode);  break;  // set_attr
      case 0x2C:   dis_clear_attr(loc,opcode);  break;  // clear_attr
      case 0x2D:   dis_store(loc,opcode);  break;  // store
      case 0x2E:   dis_insert_obj(loc,opcode);  break;  // insert_obj
      case 0x2F:   dis_loadw(loc,opcode);  break;  // loadw
      case 0x30:   dis_loadb(loc,opcode);  break;  // loadb
      case 0x31:   dis_get_prop(loc,opcode);  break;  // get_prop
      case 0x32:   dis_get_prop_addr(loc,opcode);  break;  // get_prop_addr
      case 0x33:   dis_get_next_prop(loc,opcode);  break;  // get_next_prop
      case 0x34:   dis_add(loc,opcode);  break;  // add
      case 0x35:   dis_sub(loc,opcode);  break;  // sub
      case 0x36:   dis_mul(loc,opcode);  break;  // mul
      case 0x37:   dis_div(loc,opcode);  break;  // div
      case 0x38:   dis_mod(loc,opcode);  break;  // mod
      case 0x39:   dis_call_2s(loc,opcode);  break;  // call_2s
      case 0x3A:   dis_call_2n(loc,opcode);  break;  // call_2n
      case 0x3B:   dis_set_colour(loc,opcode);  break;  // set_colour
      case 0x3C:   dis_throw(loc,opcode);  break;  // throw
      case 0x3D:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x3E:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x3F:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x40:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x41:   dis_je(loc,opcode);  break;  // je
      case 0x42:   dis_jl(loc,opcode);  break;  // jl
      case 0x43:   dis_jg(loc,opcode);  break;  // jg
      case 0x44:   dis_dec_chk(loc,opcode);  break;  // dec_chk
      case 0x45:   dis_inc_chk(loc,opcode);  break;  // inc_chk
      case 0x46:   dis_jin(loc,opcode);  break;  // jin
      case 0x47:   dis_test(loc,opcode);  break;  // test
      case 0x48:   dis_or(loc,opcode);  break;  // or
      case 0x49:   dis_and(loc,opcode);  break;  // and
      case 0x4A:   dis_test_attr(loc,opcode);  break;  // test_attr
      case 0x4B:   dis_set_attr(loc,opcode);  break;  // set_attr
      case 0x4C:   dis_clear_attr(loc,opcode);  break;  // clear_attr
      case 0x4D:   dis_store(loc,opcode);  break;  // store
      case 0x4E:   dis_insert_obj(loc,opcode);  break;  // insert_obj
      case 0x4F:   dis_loadw(loc,opcode);  break;  // loadw
      case 0x50:   dis_loadb(loc,opcode);  break;  // loadb
      case 0x51:   dis_get_prop(loc,opcode);  break;  // get_prop
      case 0x52:   dis_get_prop_addr(loc,opcode);  break;  // get_prop_addr
      case 0x53:   dis_get_next_prop(loc,opcode);  break;  // get_next_prop
      case 0x54:   dis_add(loc,opcode);  break;  // add
      case 0x55:   dis_sub(loc,opcode);  break;  // sub
      case 0x56:   dis_mul(loc,opcode);  break;  // mul
      case 0x57:   dis_div(loc,opcode);  break;  // div
      case 0x58:   dis_mod(loc,opcode);  break;  // mod
      case 0x59:   dis_call_2s(loc,opcode);  break;  // call_2s
      case 0x5A:   dis_call_2n(loc,opcode);  break;  // call_2n
      case 0x5B:   dis_set_colour(loc,opcode);  break;  // set_colour
      case 0x5C:   dis_throw(loc,opcode);  break;  // throw
      case 0x5D:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x5E:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x5F:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x60:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x61:   dis_je(loc,opcode);  break;  // je
      case 0x62:   dis_jl(loc,opcode);  break;  // jl
      case 0x63:   dis_jg(loc,opcode);  break;  // jg
      case 0x64:   dis_dec_chk(loc,opcode);  break;  // dec_chk
      case 0x65:   dis_inc_chk(loc,opcode);  break;  // inc_chk
      case 0x66:   dis_jin(loc,opcode);  break;  // jin
      case 0x67:   dis_test(loc,opcode);  break;  // test
      case 0x68:   dis_or(loc,opcode);  break;  // or
      case 0x69:   dis_and(loc,opcode);  break;  // and
      case 0x6A:   dis_test_attr(loc,opcode);  break;  // test_attr
      case 0x6B:   dis_set_attr(loc,opcode);  break;  // set_attr
      case 0x6C:   dis_clear_attr(loc,opcode);  break;  // clear_attr
      case 0x6D:   dis_store(loc,opcode);  break;  // store
      case 0x6E:   dis_insert_obj(loc,opcode);  break;  // insert_obj
      case 0x6F:   dis_loadw(loc,opcode);  break;  // loadw
      case 0x70:   dis_loadb(loc,opcode);  break;  // loadb
      case 0x71:   dis_get_prop(loc,opcode);  break;  // get_prop
      case 0x72:   dis_get_prop_addr(loc,opcode);  break;  // get_prop_addr
      case 0x73:   dis_get_next_prop(loc,opcode);  break;  // get_next_prop
      case 0x74:   dis_add(loc,opcode);  break;  // add
      case 0x75:   dis_sub(loc,opcode);  break;  // sub
      case 0x76:   dis_mul(loc,opcode);  break;  // mul
      case 0x77:   dis_div(loc,opcode);  break;  // div
      case 0x78:   dis_mod(loc,opcode);  break;  // mod
      case 0x79:   dis_call_2s(loc,opcode);  break;  // call_2s
      case 0x7A:   dis_call_2n(loc,opcode);  break;  // call_2n
      case 0x7B:   dis_set_colour(loc,opcode);  break;  // set_colour
      case 0x7C:   dis_throw(loc,opcode);  break;  // throw
      case 0x7D:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x7E:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x7F:   dis_illegal(loc,opcode);  break;  // illegal
      case 0x80:   dis_jz(loc,opcode);  break;  // jz
      case 0x81:   dis_get_sibling(loc,opcode);  break;  // get_sibling
      case 0x82:   dis_get_child(loc,opcode);  break;  // get_child
      case 0x83:   dis_get_parent(loc,opcode);  break;  // get_parent
      case 0x84:   dis_get_prop_len(loc,opcode);  break;  // get_prop_len
      case 0x85:   dis_inc(loc,opcode);  break;  // inc
      case 0x86:   dis_dec(loc,opcode);  break;  // dec
      case 0x87:   dis_print_addr(loc,opcode);  break;  // print_addr
      case 0x88:   dis_call_1s(loc,opcode);  break;  // call_1s
      case 0x89:   dis_remove_obj(loc,opcode);  break;  // remove_obj
      case 0x8A:   dis_print_obj(loc,opcode);  break;  // print_obj
      case 0x8B:   dis_ret(loc,opcode);  break;  // ret
      case 0x8C:   dis_jump(loc,opcode);  break;  // jump
      case 0x8D:   dis_print_paddr(loc,opcode);  break;  // print_paddr
      case 0x8E:   dis_load(loc,opcode);  break;  // load
      case 0x8F:   dis_not(loc,opcode);  break;  // not
      case 0x90:   dis_jz(loc,opcode);  break;  // jz
      case 0x91:   dis_get_sibling(loc,opcode);  break;  // get_sibling
      case 0x92:   dis_get_child(loc,opcode);  break;  // get_child
      case 0x93:   dis_get_parent(loc,opcode);  break;  // get_parent
      case 0x94:   dis_get_prop_len(loc,opcode);  break;  // get_prop_len
      case 0x95:   dis_inc(loc,opcode);  break;  // inc
      case 0x96:   dis_dec(loc,opcode);  break;  // dec
      case 0x97:   dis_print_addr(loc,opcode);  break;  // print_addr
      case 0x98:   dis_call_1s(loc,opcode);  break;  // call_1s
      case 0x99:   dis_remove_obj(loc,opcode);  break;  // remove_obj
      case 0x9A:   dis_print_obj(loc,opcode);  break;  // print_obj
      case 0x9B:   dis_ret(loc,opcode);  break;  // ret
      case 0x9C:   dis_jump(loc,opcode);  break;  // jump
      case 0x9D:   dis_print_paddr(loc,opcode);  break;  // print_paddr
      case 0x9E:   dis_load(loc,opcode);  break;  // load
      case 0x9F:   dis_not(loc,opcode);  break;  // not
      case 0xA0:   dis_jz(loc,opcode);  break;  // jz
      case 0xA1:   dis_get_sibling(loc,opcode);  break;  // get_sibling
      case 0xA2:   dis_get_child(loc,opcode);  break;  // get_child
      case 0xA3:   dis_get_parent(loc,opcode);  break;  // get_parent
      case 0xA4:   dis_get_prop_len(loc,opcode);  break;  // get_prop_len
      case 0xA5:   dis_inc(loc,opcode);  break;  // inc
      case 0xA6:   dis_dec(loc,opcode);  break;  // dec
      case 0xA7:   dis_print_addr(loc,opcode);  break;  // print_addr
      case 0xA8:   dis_call_1s(loc,opcode);  break;  // call_1s
      case 0xA9:   dis_remove_obj(loc,opcode);  break;  // remove_obj
      case 0xAA:   dis_print_obj(loc,opcode);  break;  // print_obj
      case 0xAB:   dis_ret(loc,opcode);  break;  // ret
      case 0xAC:   dis_jump(loc,opcode);  break;  // jump
      case 0xAD:   dis_print_paddr(loc,opcode);  break;  // print_paddr
      case 0xAE:   dis_load(loc,opcode);  break;  // load
      case 0xAF:   dis_not(loc,opcode);  break;  // not
      case 0xB0:   dis_rtrue(loc,opcode);  break;  // rtrue
      case 0xB1:   dis_rfalse(loc,opcode);  break;  // rfalse
      case 0xB2:   dis_print(loc,opcode);  break;  // print
      case 0xB3:   dis_print_ret(loc,opcode);  break;  // print_ret
      case 0xB4:   dis_nop(loc,opcode);  break;  // nop
      case 0xB5:   dis_save(loc,opcode);  break;  // save
      case 0xB6:   dis_restore(loc,opcode);  break;  // restore
      case 0xB7:   dis_restart(loc,opcode);  break;  // restart
      case 0xB8:   dis_ret_popped(loc,opcode);  break;  // ret_popped
      case 0xB9:   dis_pop(loc,opcode);  break;  // pop
      case 0xBA:   dis_quit(loc,opcode);  break;  // quit
      case 0xBB:   dis_new_line(loc,opcode);  break;  // new_line
      case 0xBC:   dis_show_status(loc,opcode);  break;  // show_status
      case 0xBD:   dis_verify(loc,opcode);  break;  // verify
      case 0xBE:   dis_extended(loc,opcode);  break;  // extended
      case 0xBF:   dis_piracy(loc,opcode);  break;  // piracy
      case 0xC0:   dis_illegal(loc,opcode);  break;  // illegal
      case 0xC1:   dis_je(loc,opcode);  break;  // je
      case 0xC2:   dis_jl(loc,opcode);  break;  // jl
      case 0xC3:   dis_jg(loc,opcode);  break;  // jg
      case 0xC4:   dis_dec_chk(loc,opcode);  break;  // dec_chk
      case 0xC5:   dis_inc_chk(loc,opcode);  break;  // inc_chk
      case 0xC6:   dis_jin(loc,opcode);  break;  // jin
      case 0xC7:   dis_test(loc,opcode);  break;  // test
      case 0xC8:   dis_or(loc,opcode);  break;  // or
      case 0xC9:   dis_and(loc,opcode);  break;  // and
      case 0xCA:   dis_test_attr(loc,opcode);  break;  // test_attr
      case 0xCB:   dis_set_attr(loc,opcode);  break;  // set_attr
      case 0xCC:   dis_clear_attr(loc,opcode);  break;  // clear_attr
      case 0xCD:   dis_store(loc,opcode);  break;  // store
      case 0xCE:   dis_insert_obj(loc,opcode);  break;  // insert_obj
      case 0xCF:   dis_loadw(loc,opcode);  break;  // loadw
      case 0xD0:   dis_loadb(loc,opcode);  break;  // loadb
      case 0xD1:   dis_get_prop(loc,opcode);  break;  // get_prop
      case 0xD2:   dis_get_prop_addr(loc,opcode);  break;  // get_prop_addr
      case 0xD3:   dis_get_next_prop(loc,opcode);  break;  // get_next_prop
      case 0xD4:   dis_add(loc,opcode);  break;  // add
      case 0xD5:   dis_sub(loc,opcode);  break;  // sub
      case 0xD6:   dis_mul(loc,opcode);  break;  // mul
      case 0xD7:   dis_div(loc,opcode);  break;  // div
      case 0xD8:   dis_mod(loc,opcode);  break;  // mod
      case 0xD9:   dis_call_2s(loc,opcode);  break;  // call_2s
      case 0xDA:   dis_call_2n(loc,opcode);  break;  // call_2n
      case 0xDB:   dis_set_colour(loc,opcode);  break;  // set_colour
      case 0xDC:   dis_throw(loc,opcode);  break;  // throw
      case 0xDD:   dis_illegal(loc,opcode);  break;  // illegal
      case 0xDE:   dis_illegal(loc,opcode);  break;  // illegal
      case 0xDF:   dis_illegal(loc,opcode);  break;  // illegal
      case 0xE0:   dis_call(loc,opcode);  break;  // call
      case 0xE1:   dis_storew(loc,opcode);  break;  // storew
      case 0xE2:   dis_storeb(loc,opcode);  break;  // storeb
      case 0xE3:   dis_put_prop(loc,opcode);  break;  // put_prop
      case 0xE4:   dis_sread(loc,opcode);  break;  // sread
      case 0xE5:   dis_print_char(loc,opcode);  break;  // print_char
      case 0xE6:   dis_print_num(loc,opcode);  break;  // print_num
      case 0xE7:   dis_random(loc,opcode);  break;  // random
      case 0xE8:   dis_push(loc,opcode);  break;  // push
      case 0xE9:   dis_pull(loc,opcode);  break;  // pull
      case 0xEA:   dis_split_window(loc,opcode);  break;  // split_window
      case 0xEB:   dis_set_window(loc,opcode);  break;  // set_window
      case 0xEC:   dis_call_vs2(loc,opcode);  break;  // call_vs2
      case 0xED:   dis_erase_window(loc,opcode);  break;  // erase_window
      case 0xEE:   dis_erase_line(loc,opcode);  break;  // erase_line
      case 0xEF:   dis_set_cursor(loc,opcode);  break;  // set_cursor
      case 0xF0:   dis_get_cursor(loc,opcode);  break;  // get_cursor
      case 0xF1:   dis_set_text_style(loc,opcode);  break;  // set_text_style
      case 0xF2:   dis_buffer_mode(loc,opcode);  break;  // buffer_mode
      case 0xF3:   dis_output_stream(loc,opcode);  break;  // output_stream
      case 0xF4:   dis_input_stream(loc,opcode);  break;  // input_stream
      case 0xF5:   dis_sound_effect(loc,opcode);  break;  // sound_effect
      case 0xF6:   dis_read_char(loc,opcode);  break;  // read_char
      case 0xF7:   dis_scan_table(loc,opcode);  break;  // scan_table
      case 0xF8:   dis_not(loc,opcode);  break;  // not
      case 0xF9:   dis_call_vn(loc,opcode);  break;  // call_vn
      case 0xFA:   dis_call_vn2(loc,opcode);  break;  // call_vn2
      case 0xFB:   dis_tokenise(loc,opcode);  break;  // tokenise
      case 0xFC:   dis_encode_text(loc,opcode);  break;  // encode_text
      case 0xFD:   dis_copy_table(loc,opcode);  break;  // copy_table
      case 0xFE:   dis_print_table(loc,opcode);  break;  // print_table
      case 0xFF:   dis_check_arg_count(loc,opcode);  break;  // check_arg_count
      default:  dis_invalid("EZMachine_dis.h"); break;
  }
