  // Don't edit this file, it is machine generated
  switch(topcode) {
      case 0x0x00:   exec_brk(loc,opcode);  break;
      case 0x0x01:   exec_ora(loc,opcode);  break;
      case 0x0x02:   exec_illegal(loc,opcode);  break;
      case 0x0x03:   exec_illegal(loc,opcode);  break;
      case 0x0x04:   exec_illegal(loc,opcode);  break;
      case 0x0x05:   exec_ora(loc,opcode);  break;
      case 0x0x06:   exec_asl(loc,opcode);  break;
      case 0x0x07:   exec_illegal(loc,opcode);  break;
      case 0x0x08:   exec_php(loc,opcode);  break;
      case 0x0x09:   exec_ora(loc,opcode);  break;
      case 0x0x0a:   exec_asl a(loc,opcode);  break;
      case 0x0x0b:   exec_illegal(loc,opcode);  break;
      case 0x0x0c:   exec_illegal(loc,opcode);  break;
      case 0x0x0d:   exec_ora(loc,opcode);  break;
      case 0x0x0e:   exec_asl(loc,opcode);  break;
      case 0x0x0f:   exec_illegal(loc,opcode);  break;
      case 0x0x10:   exec_bpl(loc,opcode);  break;
      case 0x0x11:   exec_ora(loc,opcode);  break;
      case 0x0x12:   exec_illegal(loc,opcode);  break;
      case 0x0x13:   exec_illegal(loc,opcode);  break;
      case 0x0x14:   exec_illegal(loc,opcode);  break;
      case 0x0x15:   exec_ora(loc,opcode);  break;
      case 0x0x16:   exec_asl(loc,opcode);  break;
      case 0x0x17:   exec_illegal(loc,opcode);  break;
      case 0x0x18:   exec_clc(loc,opcode);  break;
      case 0x0x19:   exec_ora(loc,opcode);  break;
      case 0x0x1a:   exec_illegal(loc,opcode);  break;
      case 0x0x1b:   exec_illegal(loc,opcode);  break;
      case 0x0x1c:   exec_illegal(loc,opcode);  break;
      case 0x0x1d:   exec_ora(loc,opcode);  break;
      case 0x0x1e:   exec_asl(loc,opcode);  break;
      case 0x0x1f:   exec_illegal(loc,opcode);  break;
      case 0x0x20:   exec_jsr(loc,opcode);  break;
      case 0x0x21:   exec_and(loc,opcode);  break;
      case 0x0x22:   exec_illegal(loc,opcode);  break;
      case 0x0x23:   exec_illegal(loc,opcode);  break;
      case 0x0x24:   exec_bit(loc,opcode);  break;
      case 0x0x25:   exec_and(loc,opcode);  break;
      case 0x0x26:   exec_rol(loc,opcode);  break;
      case 0x0x27:   exec_illegal(loc,opcode);  break;
      case 0x0x28:   exec_plp(loc,opcode);  break;
      case 0x0x29:   exec_and(loc,opcode);  break;
      case 0x0x2a:   exec_rol a(loc,opcode);  break;
      case 0x0x2b:   exec_illegal(loc,opcode);  break;
      case 0x0x2c:   exec_bit(loc,opcode);  break;
      case 0x0x2d:   exec_and(loc,opcode);  break;
      case 0x0x2e:   exec_rol(loc,opcode);  break;
      case 0x0x2f:   exec_illegal(loc,opcode);  break;
      case 0x0x30:   exec_bmi(loc,opcode);  break;
      case 0x0x31:   exec_and(loc,opcode);  break;
      case 0x0x32:   exec_illegal(loc,opcode);  break;
      case 0x0x33:   exec_illegal(loc,opcode);  break;
      case 0x0x34:   exec_illegal(loc,opcode);  break;
      case 0x0x35:   exec_and(loc,opcode);  break;
      case 0x0x36:   exec_rol(loc,opcode);  break;
      case 0x0x37:   exec_illegal(loc,opcode);  break;
      case 0x0x38:   exec_sec(loc,opcode);  break;
      case 0x0x39:   exec_and(loc,opcode);  break;
      case 0x0x3a:   exec_illegal(loc,opcode);  break;
      case 0x0x3b:   exec_illegal(loc,opcode);  break;
      case 0x0x3c:   exec_illegal(loc,opcode);  break;
      case 0x0x3d:   exec_and(loc,opcode);  break;
      case 0x0x3e:   exec_rol(loc,opcode);  break;
      case 0x0x3f:   exec_illegal(loc,opcode);  break;
      case 0x0x40:   exec_rti(loc,opcode);  break;
      case 0x0x41:   exec_eor(loc,opcode);  break;
      case 0x0x42:   exec_illegal(loc,opcode);  break;
      case 0x0x43:   exec_illegal(loc,opcode);  break;
      case 0x0x44:   exec_illegal(loc,opcode);  break;
      case 0x0x45:   exec_eor(loc,opcode);  break;
      case 0x0x46:   exec_lsr(loc,opcode);  break;
      case 0x0x47:   exec_illegal(loc,opcode);  break;
      case 0x0x48:   exec_pha(loc,opcode);  break;
      case 0x0x49:   exec_eor(loc,opcode);  break;
      case 0x0x4a:   exec_lsr a(loc,opcode);  break;
      case 0x0x4b:   exec_illegal(loc,opcode);  break;
      case 0x0x4c:   exec_jmp(loc,opcode);  break;
      case 0x0x4d:   exec_eor(loc,opcode);  break;
      case 0x0x4e:   exec_lsr(loc,opcode);  break;
      case 0x0x4f:   exec_illegal(loc,opcode);  break;
      case 0x0x50:   exec_bvc(loc,opcode);  break;
      case 0x0x51:   exec_eor(loc,opcode);  break;
      case 0x0x52:   exec_illegal(loc,opcode);  break;
      case 0x0x53:   exec_illegal(loc,opcode);  break;
      case 0x0x54:   exec_illegal(loc,opcode);  break;
      case 0x0x55:   exec_eor(loc,opcode);  break;
      case 0x0x56:   exec_lsr(loc,opcode);  break;
      case 0x0x57:   exec_illegal(loc,opcode);  break;
      case 0x0x58:   exec_cli(loc,opcode);  break;
      case 0x0x59:   exec_eor(loc,opcode);  break;
      case 0x0x5a:   exec_illegal(loc,opcode);  break;
      case 0x0x5b:   exec_illegal(loc,opcode);  break;
      case 0x0x5c:   exec_illegal(loc,opcode);  break;
      case 0x0x5d:   exec_eor(loc,opcode);  break;
      case 0x0x5e:   exec_lsr(loc,opcode);  break;
      case 0x0x5f:   exec_illegal(loc,opcode);  break;
      case 0x0x60:   exec_rts(loc,opcode);  break;
      case 0x0x61:   exec_adc(loc,opcode);  break;
      case 0x0x62:   exec_illegal(loc,opcode);  break;
      case 0x0x63:   exec_illegal(loc,opcode);  break;
      case 0x0x64:   exec_illegal(loc,opcode);  break;
      case 0x0x65:   exec_adc(loc,opcode);  break;
      case 0x0x66:   exec_ror(loc,opcode);  break;
      case 0x0x67:   exec_illegal(loc,opcode);  break;
      case 0x0x68:   exec_pla(loc,opcode);  break;
      case 0x0x69:   exec_adc(loc,opcode);  break;
      case 0x0x6a:   exec_ror a(loc,opcode);  break;
      case 0x0x6b:   exec_illegal(loc,opcode);  break;
      case 0x0x6c:   exec_jmp(loc,opcode);  break;
      case 0x0x6d:   exec_adc(loc,opcode);  break;
      case 0x0x6e:   exec_ror(loc,opcode);  break;
      case 0x0x6f:   exec_illegal(loc,opcode);  break;
      case 0x0x70:   exec_bvs(loc,opcode);  break;
      case 0x0x71:   exec_adc(loc,opcode);  break;
      case 0x0x72:   exec_illegal(loc,opcode);  break;
      case 0x0x73:   exec_illegal(loc,opcode);  break;
      case 0x0x74:   exec_illegal(loc,opcode);  break;
      case 0x0x75:   exec_adc(loc,opcode);  break;
      case 0x0x76:   exec_ror(loc,opcode);  break;
      case 0x0x77:   exec_illegal(loc,opcode);  break;
      case 0x0x78:   exec_sei(loc,opcode);  break;
      case 0x0x79:   exec_adc(loc,opcode);  break;
      case 0x0x7a:   exec_illegal(loc,opcode);  break;
      case 0x0x7b:   exec_illegal(loc,opcode);  break;
      case 0x0x7c:   exec_illegal(loc,opcode);  break;
      case 0x0x7d:   exec_adc(loc,opcode);  break;
      case 0x0x7e:   exec_ror(loc,opcode);  break;
      case 0x0x7f:   exec_illegal(loc,opcode);  break;
      case 0x0x80:   exec_illegal(loc,opcode);  break;
      case 0x0x81:   exec_sta(loc,opcode);  break;
      case 0x0x82:   exec_illegal(loc,opcode);  break;
      case 0x0x83:   exec_illegal(loc,opcode);  break;
      case 0x0x84:   exec_sty(loc,opcode);  break;
      case 0x0x85:   exec_sta(loc,opcode);  break;
      case 0x0x86:   exec_stx(loc,opcode);  break;
      case 0x0x87:   exec_illegal(loc,opcode);  break;
      case 0x0x88:   exec_dey(loc,opcode);  break;
      case 0x0x89:   exec_illegal(loc,opcode);  break;
      case 0x0x8a:   exec_txa(loc,opcode);  break;
      case 0x0x8b:   exec_illegal(loc,opcode);  break;
      case 0x0x8c:   exec_sty(loc,opcode);  break;
      case 0x0x8d:   exec_sta(loc,opcode);  break;
      case 0x0x8e:   exec_stx(loc,opcode);  break;
      case 0x0x8f:   exec_illegal(loc,opcode);  break;
      case 0x0x90:   exec_bcc(loc,opcode);  break;
      case 0x0x91:   exec_sta(loc,opcode);  break;
      case 0x0x92:   exec_illegal(loc,opcode);  break;
      case 0x0x93:   exec_illegal(loc,opcode);  break;
      case 0x0x94:   exec_sty(loc,opcode);  break;
      case 0x0x95:   exec_sta(loc,opcode);  break;
      case 0x0x96:   exec_stx(loc,opcode);  break;
      case 0x0x97:   exec_illegal(loc,opcode);  break;
      case 0x0x98:   exec_tya(loc,opcode);  break;
      case 0x0x99:   exec_sta(loc,opcode);  break;
      case 0x0x9a:   exec_txs(loc,opcode);  break;
      case 0x0x9b:   exec_illegal(loc,opcode);  break;
      case 0x0x9c:   exec_illegal(loc,opcode);  break;
      case 0x0x9d:   exec_sta(loc,opcode);  break;
      case 0x0x9e:   exec_illegal(loc,opcode);  break;
      case 0x0x9f:   exec_illegal(loc,opcode);  break;
      case 0x0xa0:   exec_ldy(loc,opcode);  break;
      case 0x0xa1:   exec_lda(loc,opcode);  break;
      case 0x0xa2:   exec_ldx(loc,opcode);  break;
      case 0x0xa3:   exec_illegal(loc,opcode);  break;
      case 0x0xa4:   exec_ldy(loc,opcode);  break;
      case 0x0xa5:   exec_lda(loc,opcode);  break;
      case 0x0xa6:   exec_ldx(loc,opcode);  break;
      case 0x0xa7:   exec_illegal(loc,opcode);  break;
      case 0x0xa8:   exec_tay(loc,opcode);  break;
      case 0x0xa9:   exec_lda(loc,opcode);  break;
      case 0x0xaa:   exec_tax(loc,opcode);  break;
      case 0x0xab:   exec_illegal(loc,opcode);  break;
      case 0x0xac:   exec_ldy(loc,opcode);  break;
      case 0x0xad:   exec_lda(loc,opcode);  break;
      case 0x0xae:   exec_ldx(loc,opcode);  break;
      case 0x0xaf:   exec_illegal(loc,opcode);  break;
      case 0x0xb0:   exec_bcs(loc,opcode);  break;
      case 0x0xb1:   exec_lda(loc,opcode);  break;
      case 0x0xb2:   exec_illegal(loc,opcode);  break;
      case 0x0xb3:   exec_illegal(loc,opcode);  break;
      case 0x0xb4:   exec_ldy(loc,opcode);  break;
      case 0x0xb5:   exec_lda(loc,opcode);  break;
      case 0x0xb6:   exec_ldx(loc,opcode);  break;
      case 0x0xb7:   exec_illegal(loc,opcode);  break;
      case 0x0xb8:   exec_clv(loc,opcode);  break;
      case 0x0xb9:   exec_lda(loc,opcode);  break;
      case 0x0xba:   exec_tsx(loc,opcode);  break;
      case 0x0xbb:   exec_illegal(loc,opcode);  break;
      case 0x0xbc:   exec_ldy(loc,opcode);  break;
      case 0x0xbd:   exec_lda(loc,opcode);  break;
      case 0x0xbe:   exec_ldx(loc,opcode);  break;
      case 0x0xbf:   exec_illegal(loc,opcode);  break;
      case 0x0xc0:   exec_cpy(loc,opcode);  break;
      case 0x0xc1:   exec_cmp(loc,opcode);  break;
      case 0x0xc2:   exec_illegal(loc,opcode);  break;
      case 0x0xc3:   exec_illegal(loc,opcode);  break;
      case 0x0xc4:   exec_cpy(loc,opcode);  break;
      case 0x0xc5:   exec_cmp(loc,opcode);  break;
      case 0x0xc6:   exec_dec(loc,opcode);  break;
      case 0x0xc7:   exec_illegal(loc,opcode);  break;
      case 0x0xc8:   exec_iny(loc,opcode);  break;
      case 0x0xc9:   exec_cmp(loc,opcode);  break;
      case 0x0xca:   exec_dex(loc,opcode);  break;
      case 0x0xcb:   exec_illegal(loc,opcode);  break;
      case 0x0xcc:   exec_cpy(loc,opcode);  break;
      case 0x0xcd:   exec_cmp(loc,opcode);  break;
      case 0x0xce:   exec_dec(loc,opcode);  break;
      case 0x0xcf:   exec_illegal(loc,opcode);  break;
      case 0x0xd0:   exec_bne(loc,opcode);  break;
      case 0x0xd1:   exec_cmp(loc,opcode);  break;
      case 0x0xd2:   exec_illegal(loc,opcode);  break;
      case 0x0xd3:   exec_illegal(loc,opcode);  break;
      case 0x0xd4:   exec_illegal(loc,opcode);  break;
      case 0x0xd5:   exec_cmp(loc,opcode);  break;
      case 0x0xd6:   exec_dec(loc,opcode);  break;
      case 0x0xd7:   exec_illegal(loc,opcode);  break;
      case 0x0xd8:   exec_cld(loc,opcode);  break;
      case 0x0xd9:   exec_cmp(loc,opcode);  break;
      case 0x0xda:   exec_illegal(loc,opcode);  break;
      case 0x0xdb:   exec_illegal(loc,opcode);  break;
      case 0x0xdc:   exec_illegal(loc,opcode);  break;
      case 0x0xdd:   exec_cmp(loc,opcode);  break;
      case 0x0xde:   exec_dec(loc,opcode);  break;
      case 0x0xdf:   exec_illegal(loc,opcode);  break;
      case 0x0xe0:   exec_cpx(loc,opcode);  break;
      case 0x0xe1:   exec_sbc(loc,opcode);  break;
      case 0x0xe2:   exec_illegal(loc,opcode);  break;
      case 0x0xe3:   exec_illegal(loc,opcode);  break;
      case 0x0xe4:   exec_cpx(loc,opcode);  break;
      case 0x0xe5:   exec_sbc(loc,opcode);  break;
      case 0x0xe6:   exec_inc(loc,opcode);  break;
      case 0x0xe7:   exec_illegal(loc,opcode);  break;
      case 0x0xe8:   exec_inx(loc,opcode);  break;
      case 0x0xe9:   exec_sbc(loc,opcode);  break;
      case 0x0xea:   exec_nop(loc,opcode);  break;
      case 0x0xeb:   exec_illegal(loc,opcode);  break;
      case 0x0xec:   exec_cpx(loc,opcode);  break;
      case 0x0xed:   exec_sbc(loc,opcode);  break;
      case 0x0xee:   exec_inc(loc,opcode);  break;
      case 0x0xef:   exec_illegal(loc,opcode);  break;
      case 0x0xf0:   exec_beq(loc,opcode);  break;
      case 0x0xf1:   exec_sbc(loc,opcode);  break;
      case 0x0xf2:   exec_illegal(loc,opcode);  break;
      case 0x0xf3:   exec_illegal(loc,opcode);  break;
      case 0x0xf4:   exec_illegal(loc,opcode);  break;
      case 0x0xf5:   exec_sbc(loc,opcode);  break;
      case 0x0xf6:   exec_inc(loc,opcode);  break;
      case 0x0xf7:   exec_illegal(loc,opcode);  break;
      case 0x0xf8:   exec_sed(loc,opcode);  break;
      case 0x0xf9:   exec_sbc(loc,opcode);  break;
      case 0x0xfa:   exec_illegal(loc,opcode);  break;
      case 0x0xfb:   exec_illegal(loc,opcode);  break;
      case 0x0xfc:   exec_illegal(loc,opcode);  break;
      case 0x0xfd:   exec_sbc(loc,opcode);  break;
      case 0x0xfe:   exec_inc(loc,opcode);  break;
      case 0x0xff:   exec_illegal(loc,opcode);  break;
      default:  exec_invalid("Em6502_exec.h"); break;
  }
