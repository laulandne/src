// Don't edit this file, it is machine generated

const char *NAmiga_RegName[]={
"BLTDDAT","DMACONR","VPOSR","VHPOSR",
"DSKDATR","JOY0DAT","JOT1DAT","CLXDAT",
"ADKCONR","POT0DAT","POT1DAT","POTINP",
"SERDATR","DSKBYTR","INTENAR","INTREQR",
"DSKPTH","DSKPTL","DSKLEN","DSKDAT",
"REFPTR","VPOSW","VHPOSW","COPCON",
"SERDAT","SERPER","POTGO","JOYTEST",
"STREQU","STRVBL","STRHOR","STRLONG",
"BLTCON0","BLTCON1","BLTAFWM","BLTALWM",
"BLTCPTH","BLTCPTL","BLTBPTH","BLTBPTL",
"BLTAPTH","BLTAPTL","BPTDPTH","BLTDPTL",
"BLTSIZE","BLTCON0L","BLTSIZV","BLTSIZH",
"BLTCMOD","BLTBMOD","BLTAMOD","BLTDMOD",
"(undefined)","(Undefined)","(Undefined)","(Undefined)",
"BLTCDAT","BLTBDAT","BLTADAT","(Undefined)",
"SPRHDAT","(BPLHDAT)","LISAID","DSKSYNC",
"COP1LCH","COP1LCL","COP2LCH","COP2LCL",
"AUD0LCH","AUD0LCL","AUD0DAT","AUD1LCH",
"AUD1LCL","AUD1DAT","AUD2LCH","AUD2LCL",
"AUD2DAT","AUD3LCH","AUD3LCL","AUD3DAT",
"BPL1PTH","BPL1PTL","BPL2PTH","BPL2PTL",
"BPL3PTH","BPL3PTL","BPL4PTH","BPL4PTL",
"BPL5PTH","BPL5PTL","BPL6PTH","BPL6PTL",
"BPL7PTH","BPL7PTL","BPL8PTH","BPL8PTL",
"BPLCON4","CLXCON2","BPL1DAT","BPL2DAT",
"BPL3DAT","BPL4DAT","BPL5DAT","BPL6DAT",
"BPL7DAT","BPL8DAT","SPR0PTH","SPR0PTL",
"SPR1PTH","SPR1PTL","SPR2PTH","SPR2PTL",
"SPR3PTH","SPR3PTL","SPR4PTH","SPR4PTL",
"SPR5PTH","SPR5PTL","SPR6PTH","SPR6PTL",
"SPR7PTH","SPR7PTL","SPR0POS","SPR0CTL",
"SPR0DATA","SPR0DATB","SPR1POS","SPR1CTL",
"SPR1DATA","SPR1DATB","SPR2POS","SPR2CTL",
"SPR2DATA","SPR2DATB","SPR3POS","SPR3CTL",
"SPR3DATA","SPR3DATB","SPR4POS","SPR4CTL",
"SPR4DATA","SPR4DATB","SPR5POS","SPR5CTL",
"SPR5DATA","SPR5DATB","SPR6POS","SPR6CTL",
"SPR6DATA","SPR6DATB","SPR7POS","SPR7CTL",
"SPR7DATA","SPR7DATB","HTOTAL","HSSTOP",
"HBSTRT","HBSTOP","VTOTAL","VSSTOP",
"VBSTRT","VBSTOP","SPRHSTRT","SPRHSTOP",
"BPLHSTRT","BPLHSTOP","HHPOSW","HHPOSR",
"BEAMCON0","HSSTRT","VSSTRT","HCENTER",
"DIWHIGH","BPLHMOD","SPRHPTH","SPRHPTL",
"BPLHPTH","BPLHPTL","FMODE",};

const char *NAmiga_RegSymbol[]={
"&~","~","~","~","&~","~","~","~",
"~","~","~","~","~","~","~","~",
"+~","+~","~","&~","&~","~","~","~",
"~","~","~","~","&~","&~","&~","&~",
"~","~","~","~","+~","+~","+~","+~",
"+~","+~","+~","+~","~","h~","h~","h~",
"~","~","~","~","~","~","~","~",
"&~","&~","&~","~","&h","~","h~","~",
"+","+","+","+","+","+","&","+",
"+","&","+","+","&","+","+","&",
"+","+","+","+","+","+","+","+",
"+","+","+","+","+","+","+","+",
"p","p","&","&","&","&","&","&",
"&p","&p","+","+","+","+","+","+",
"+","+","+","+","+","+","+","+",
"+","+","%","%","%","%","%","%",
"%","%","%","%","%","%","%","%",
"%","%","%","%","%","%","%","%",
"%","%","%","%","%","%","%","%",
"%","%","h","h","h","h","h","h",
"h","h","h","h","h","h","h","h",
"h","h","h","h","h","h","+h","+h",
"+h","+h","p",};

const char *NAmiga_RegChip[]={
"A","AP","A","A","P","D","D","D",
"P","P","P","P","P","P","P","P",
"A","A","P","P","A","A","AD","A",
"P","P","P","D","D","D","DP","D",
"A","A","A","A","A","A","A","A",
"A","A","A","A","A","A","A","A",
"A","A","A","A","?","?","?","?",
"A","A","A","?","A","?","D","P",
"A","A","A","A","A","A","P","A",
"A","P","A","A","P","A","A","P",
"A","A","A","A","A","A","A","A",
"A","A","A","A","A","A","A","A",
"D","D","D","D","D","D","D","D",
"D","D","A","A","A","A","A","A",
"A","A","A","A","A","A","A","A",
"A","A","AD","AD","D","D","AD","AD",
"D","D","AD","AD","D","D","AD","AD",
"D","D","AD","AD","D","D","AD","AD",
"D","D","AD","AD","D","D","AD","AD",
"D","D","A","A","AD","AD","A","A",
"A","A","A","A","A","A","A","A",
"A","A","A","A","AD","A","A","A",
"A","A","AD",};

const char *NAmiga_RegAccess[]={
"ER","R","R","R","ER","R","R","R",
"R","R","R","R","R","R","R","R",
"W","W","W","W","W","W","W","W",
"W","W","W","W","S","S","S","S",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","?","?","?","?",
"W","W","W","?","W","?","R","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","W",
"W","W","W","W","W","W","W","R",
"W","W","W","W","W","W","W","W",
"W","W","W",};

const char *NAmiga_RegDesc[]={
"Blitter dest. early read (dummy address)",
"Dma control (and blitter status) read",
"Read vert most sig. bits (and frame flop",
"Read vert and horiz position of beam",
"Disk data early read (dummy address)",
"Joystick-mouse 0 data (vert,horiz)",
"Joystick-mouse 1 data (vert,horiz)",
"Collision data reg. (read and clear)",
"Audio,disk control register read",
"Pot counter pair 0 data (vert,horiz)",
"Pot counter pair 1 data (vert,horiz)",
"Pot pin data read",
"Serial port data and status read",
"Disk data byte and status read",
"Interrupt enable bits read",
"Interrupt request bits read",
"Disk pointer (high 5 bits)",
"Disk pointer (low 15 bits)",
"Disk lentgh",
"Disk DMA data write",
"Refresh pointer",
"Write vert most sig. bits(and frame flop)",
"Write vert and horiz pos of beam",
"Coprocessor control reg (CDANG)",
"Serial port data and stop bits write",
"Serial port period and control",
"Pot count start,pot pin drive enable data",
"Write to all 4 joystick-mouse counters at once",
"Strobe for horiz sync with VB and EQU",
"Strobe for horiz sync with VB (vert blank)",
"Strobe for horiz sync",
"Strobe for identification of long horiz line",
"Blitter control reg 0",
"Blitter control reg 1",
"Blitter first word mask for source A",
"Blitter last word mask for source A",
"Blitter pointer to source C (high 5 bits)",
"Blitter pointer to source C (low 15 bits)",
"Blitter pointer to source B (high 5 bits)",
"Blitter pointer to source B (low 15 bits)",
"Blitter pointer to source A (high 5 bits)",
"Blitter pointer to source A (low 15 bits)",
"Blitter pointer to destnD (high 5 bits)",
"Blitter pointer to destnD (low 15 bits)",
"Blitter start and size (win/width,height)",
"Blitter control 0 lower 8 bits (minterms)",
"Blitter V size (for 15 bit vert size)",
"Blitter H size & start (for 11 bit H size)",
"Blitter modulo for source C",
"Blitter modulo for source B",
"Blitter modulo for source A",
"Blitter modulo for destnD",
"Undefined",
"Undefined",
"Undefined",
"Undefined",
"Blitter source C data reg",
"Blitter source B data reg",
"Blitter source A data reg",
"Undefined",
"Ext logic UHRES sprite pointer and data identifier",
"?????",
"Chip revision level for Denise/Lisa",
"Disk sync pattern reg for disk read",
"Coprocessor first location reg  (high 5 bits)",
"Coprocessor first location reg  (low 15 bits)",
"Coprocessor second reg  (high 5 bits)",
"Coprocessor second reg  (low 15 bits)",
"Audio channel 0 location (high 5 bits)",
"Audio channel 0 location (low 15 bits)",
"Audio channel 0 data",
"Audio channel 1 location (high 5 bits)",
"Audio channel 1 location (low 15 bits)",
"Audio channel 1 data",
"Audio channel 2 location (high 5 bits)",
"Audio channel 2 location (low 15 bits)",
"Audio channel 2 data",
"Audio channel 3 location (high 5 bits)",
"Audio channel 3 location (low 15 bits)",
"Audio channel 3 data",
"Bit plane pointer 1 (high 5 bits)",
"Bit plane pointer 1 (low 15 bits)",
"Bit plane pointer 2 (high 5 bits)",
"Bit plane pointer 2 (low 15 bits)",
"Bit plane pointer 3 (high 5 bits)",
"Bit plane pointer 3 (low 15 bits)",
"Bit plane pointer 4 (high 5 bits)",
"Bit plane pointer 4 (low 15 bits)",
"Bit plane pointer 5 (high 5 bits)",
"Bit plane pointer 5 (low 15 bits)",
"Bit plane pointer 6 (high 5 bits)",
"Bit plane pointer 6 (low 15 bits)",
"Bit plane pointer 7 (high 5 bits)",
"Bit plane pointer 7 (low 15 bits)",
"Bit plane pointer 8 (high 5 bits)",
"Bit plane pointer 8 (low 15 bits)",
"Bit plane control reg (bitplane and sprite masks)",
"Extended collision control reg",
"Bit plane 1 data (parallel to serial con-vert)",
"Bit plane 2 data (parallel to serial con-vert)",
"Bit plane 3 data (parallel to serial con-vert)",
"Bit plane 4 data (parallel to serial con-vert)",
"Bit plane 5 data (parallel to serial con-vert)",
"Bit plane 6 data (parallel to serial con-vert)",
"Bit plane 7 data (parallel to serial con-vert)",
"Bit plane 8 data (parallel to serial con-vert)",
"Sprite 0 pointer (high 5 bits)",
"Sprite 0 pointer (low 15 bits)",
"Sprite 1 pointer (high 5 bits)",
"Sprite 1 pointer (low 15 bits)",
"Sprite 2 pointer (high 5 bits)",
"Sprite 2 pointer (low 15 bits)",
"Sprite 3 pointer (high 5 bits)",
"Sprite 3 pointer (low 15 bits)",
"Sprite 4 pointer (high 5 bits)",
"Sprite 4 pointer (low 15 bits)",
"Sprite 5 pointer (high 5 bits)",
"Sprite 5 pointer (low 15 bits)",
"Sprite 6 pointer (high 5 bits)",
"Sprite 6 pointer (low 15 bits)",
"Sprite 7 pointer (high 5 bits)",
"Sprite 7 pointer (low 15 bits)",
"Sprite 0 vert-horiz start pos data",
"Sprite 0 position and control data",
"Sprite 0 image data register A",
"Sprite 0 image data register B",
"Sprite 1 vert-horiz start pos data",
"Sprite 1 position and control data",
"Sprite 1 image data register A",
"Sprite 1 image data register B",
"Sprite 2 vert-horiz start pos data",
"Sprite 2 position and control data",
"Sprite 2 image data register A",
"Sprite 2 image data register B",
"Sprite 3 vert-horiz start pos data",
"Sprite 3 position and control data",
"Sprite 3 image data register A",
"Sprite 3 image data register B",
"Sprite 4 vert-horiz start pos data",
"Sprite 4 position and control data",
"Sprite 4 image data register A",
"Sprite 4 image data register B",
"Sprite 5 vert-horiz start pos data",
"Sprite 5 position and control data",
"Sprite 5 image data register A",
"Sprite 5 image data register B",
"Sprite 6 vert-horiz start pos data",
"Sprite 6 position and control data",
"Sprite 6 image data register A",
"Sprite 6 image data register B",
"Sprite 7 vert-horiz start pos data",
"Sprite 7 position and control data",
"Sprite 7 image data register A",
"Sprite 7 image data register B",
"Highest number count in horiz line (VARBEAMEN = 1)",
"Horiz line pos for HSYNC stop",
"Horiz line pos for HBLANK start",
"Horiz line pos for HBLANK stop",
"Highest numbered vertical line (VARBEAMEN = 1)",
"Vert line for VBLANK start",
"Vert line for VBLANK start",
"Vert line for VBLANK stop",
"UHRES sprite vertical start",
"UHRES sprite vertical stop",
"UHRES bit plane vertical stop",
"UHRES bit plane vertical stop",
"DUAL mode hires H beam counter write",
"DUAL mode hires H beam counter read",
"Beam counter control register (SHRES,UHRES,PAL)",
"Horizontal sync start (VARHSY)",
"Vertical sync start (VARVSY)",
"Horizontal pos for vsync on interlace",
"Display window upper bits for start/stop",
"UHRES bit plane modulo",
"UHRES sprite pointer (high 5 bits)",
"UHRES sprite pointer (low 15 bits)",
"VRam (UHRES) bitplane pointer (hi 5 bits)",
"VRam (UHRES) bitplane pointer (lo 15 bits)",
"Fetch mode register",
};

